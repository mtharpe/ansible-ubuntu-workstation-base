# Paths for all utils installed
export PATH="$HOME/.local/bin:$PATH"
export EDITOR="nvim"

# Basic Shell Colors
export PS1="\[\e[32m\]\u\[\e[m\]:\[\e[37m\]\w\[\e[m\]\[\e[37m\]:\[\e[m\]\[\e[33m\]\`parse_git_branch\`\[\e[m\]\\$ "
export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# include .bash_aliases if it exists
if [ -f "$HOME"/.bash_aliases ]; then
    . "$HOME"/.bash_aliases
fi

# User specific aliases and functions
source ~/.bashrc

# Functions

# include .bash_functions if it exists
if [ -f "$HOME"/.bash_functions ]; then
    . "$HOME"/.bash_functions
fi
function vagrant_box_update() {
AVAILABLE_UPDATES=`vagrant box outdated --global | grep outdated | tr -d "*'" | cut -d ' ' -f 2`

if [ ! ${#AVAILABLE_UPDATES[@]} -eq 0 ]; then
  for box in $AVAILABLE_UPDATES ; do

    echo "Found an update for $box"

    # Find all current versions
    VERSIONS=`vagrant box list | grep $box | cut -d ',' -f 2 | tr -d ' )'`

    # Add latest version
    vagrant box add --clean $box --provider virtualbox
    BOX_UPDATED="TRUE"

    # Remove all old versions
    for version in $VERSIONS ; do
      vagrant box remove $box -f --box-version=$version
    done

  done

  echo "All boxes are now up to date!"

else

  echo "All boxes are already up to date!"

fi

vagrant box outdated --global
}

# Git current status
function parse_git_branch() {
        BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
        if [ ! "${BRANCH}" == "" ]
        then
                STAT=`parse_git_dirty`
                echo "[${BRANCH}${STAT}]"
        else
                echo ""
        fi
}

function parse_git_dirty {
        status=`git status 2>&1 | tee`
        dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
        untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
        ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
        newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
        renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
        deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
        bits=''
        if [ "${renamed}" == "0" ]; then
                bits=">${bits}"
        fi
        if [ "${ahead}" == "0" ]; then
                bits="*${bits}"
        fi
        if [ "${newfile}" == "0" ]; then
                bits="+${bits}"
        fi
        if [ "${untracked}" == "0" ]; then
                bits="?${bits}"
        fi
        if [ "${deleted}" == "0" ]; then
                bits="x${bits}"
        fi
        if [ "${dirty}" == "0" ]; then
                bits="!${bits}"
        fi
        if [ ! "${bits}" == "" ]; then
                echo " ${bits}"
        else
                echo ""
        fi
}

# Direnv setup
eval "$(direnv hook bash)"